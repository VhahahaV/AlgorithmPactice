/*
描述
    有一个6*6的棋盘，每个棋盘上都有一个数值，现在又一个起始位置和终止位置，请找出一个从起始位置到终止位置代价最小的路径：     1、只能沿上下左右四个方向移动     2、总代价是没走一步的代价之和     3、每步（从a,b到c,d）的代价是c,d上的值与其在a,b上的状态的乘积     4、初始状态为1     每走一步，状态按如下公式变化：（走这步的代价%4）+1。
输入描述：
    每组数据一开始为6*6的矩阵，矩阵的值为大于等于1小于等于10的值，然后四个整数表示起始坐标和终止坐标。
输出描述：
    输出最小代价。
*/

#include<iostream>

#include<vector>

using namespace std;

int main(){
	int n = 6;
	vector<vector<int>> maze(n , vector<int>(n);
	for(int i  = 0 ; i < n ; i ++){
		for(int j = 0 ; j < n ; j++){
			cin >> maze[i][j];
		}
	}
	int sx,sy,ex,ey;
	cin >> sx >> sy >> ex >> ey;
	
	return 0;
}